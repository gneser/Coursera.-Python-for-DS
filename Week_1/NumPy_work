# Работа с векторами и матрицами в NumPy

import numpy as np

'''
1. Генерация случайной матрицы

Генерация матрицы, состоящей из 1000 строк и 50 столбцов, 
элементы которой являются случайными из нормального распределения N(1, 100)

Функция для генерации чисел из нормального распределения np.random.normal

Параметры:

loc - среднее нормального распределения (в нашем случае 1)
scale - стандартное отклонение нормального распределения (в нашем случае 10)
size - размер матрицы (в нашем случае (1000, 50))
'''


X = np.random.normal(loc=1, scale=10, size=(1000, 50))
print(X)

'''
2. Нормировка матрицы

Нормировка матрицы из предыдущего задания: 
вычитаем из каждого столбца его среднее значение, а затем делим на его стандартное отклонение.

Функция для вычисления среднего: np.mean
Функция для вычисления стандартного отклонения: np.std

Первый параметр — матрица, для которой производятся вычисления. 
Также полезным будет параметр axis, который указывает, по какому измерению вычисляются среднее и стандартное отклонение 
(если axis=0, то по столбцам, если axis=1, то по строкам; 
если его не указывать, то данные величины будут вычислены по всей матрице).
'''

m = np.mean(X, axis=0)
std = np.std(X, axis=0)
X_norm = ((X - m) / std)
print(X_norm)

'''
3. Операции над элементами матрицы

Вывод для заданной матрицы номера строк, сумма элементов в которых превосходит 10.

Функция для подсчета суммы: np.sum

Аргументы аналогичны функциям np.mean и np.std.

К матрицам можно применять логические операции, которые будут применяться поэлементно. 
Соответственно, результатом такой операции будет матрица такого же размера, в ячейках которой будет записано либо True,
либо False. Индексы элементов со значением True можно получить с помощью функции np.nonzero.
'''

Z = np.array([[4, 5, 0],
              [1, 9, 3],
              [5, 1, 1],
              [3, 3, 3],
              [9, 9, 9],
              [4, 7, 1]])

r = np.sum(Z, axis=1)
print(r > 10)

'''
4.Объединение матриц

Генерация двух единичных матриц (т.е. с единицами на диагонали) размера 3x3. 
Соединение двух матриц в одну размера 6x3.
Функция для генерации единичной матрицы: np.eye

Аргумент: число строк (или, что эквивалентно, столбцов).

Функция для вертикальной стыковки матриц: np.vstack((A, B))
'''

A = np.eye(3)
B = np.eye(3)
print(A)
print(B)
C = np.vstack((A, B))
print(C)
